buildscript {
    ext.kotlin_version = '1.4.30'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.4.30"
}

apply from: "$rootProject.projectDir/gradle/distributableGhidraModule.gradle"
apply from: "$rootProject.projectDir/gradle/javaProject.gradle"
apply from: "$rootProject.projectDir/gradle/jacocoProject.gradle"
apply from: "$rootProject.projectDir/gradle/javaTestProject.gradle"
apply plugin: 'kotlin'
apply plugin: 'eclipse'
eclipse.project.name = 'PcodeFiles'

application {
    mainClassName = "ghidra.GhidraLauncher"
    applicationDefaultJvmArgs = ['-Djava.system.class.loader=ghidra.GhidraClassLoader', '-Xshare:off', 'pcodefiles.PcodeFilesRun']
}

task runApp(type: JavaExec) {
    jvmArgs('-Djava.system.class.loader=ghidra.GhidraClassLoader', '-Xshare:off')
    args ('pcodefiles.PcodeFilesRun')
    classpath += project.configurations.runtimeClasspath
    classpath += files('build/libs/Main.jar', 'kotlin-stdlib-common-1.4.30.jar')
    main = "ghidra.GhidraLauncher"
}

dependencies {
    implementation project(':Utility')
    implementation project(':Base')
    implementation project(':Generic')
    implementation project(':Docking')
    implementation project(':Graph')
    implementation project(':SoftwareModeling')
    implementation project(':DB')
    implementation project(':Project')
    implementation project(':Python')

    compileOnly "junit:junit:4.12"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation fileTree(dir: 'lib', include: ['*.jar'])
}

rootProject.assembleDistribution {
    from (this.project.file("support/debug.sh"))
    from (this.project.file("support/launch.sh"))
    from (this.project.file("support/runPcodeFiles"))
    from (this.project.file("support/runPcodeFiles.bat"))
    into (getZipPath(this.project) + "/lib") {
        from (projectDir.toString() + "/lib")
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    from {
        String[] include = [
                "kotlin-runtime-${kotlin_version}.jar",
                "kotlin-stdlib-${kotlin_version}.jar"
        ]

        configurations.compile
                .findAll { include.contains(it.name) }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}